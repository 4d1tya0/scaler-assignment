{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\211ad\\\\Desktop\\\\ReactJS\\\\icp\\\\frontend\\\\src\\\\ScheduleInterview.js\",\n  _s = $RefreshSig$();\nimport moment from \"moment\";\nimport { useState, useEffect } from \"react\";\nimport Select from \"react-select\";\nimport makeAnimated from \"react-select/animated\";\nimport { useHistory } from \"react-router-dom\";\nimport { API_URL } from \"./config/config.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ScheduleInterview = () => {\n  _s();\n  let fetchParticipants = () => {\n    let url = `${API_URL}/participants`;\n    fetch(url).then(response => response.json()).then(data => {\n      console.log(data);\n      setCandidateData(data);\n    });\n  };\n  useEffect(() => {\n    fetchParticipants();\n  }, []);\n  const animatedComponents = makeAnimated();\n  const [date, setDate] = useState(new Date());\n  const [startTime, setStartTime] = useState(new Date());\n  const [endTime, setEndTime] = useState(new Date());\n  const [candidates, setCandidates] = useState([]);\n  const [candidateData, setCandidateData] = useState([]);\n  const [interviewers, setInterviewers] = useState([]);\n  const [isPending, setIsPending] = useState(false);\n  const history = useHistory();\n  const getOptions = data => {\n    console.log(data);\n    const options = [];\n    for (let d of data) {\n      options.push({\n        label: d.email,\n        value: d.email\n      });\n    }\n    return options;\n  };\n  const handleSubmit = e => {\n    setIsPending(true);\n    e.preventDefault();\n    const participants = [];\n    for (let interviewer of interviewers) {\n      participants.push(interviewer.value);\n    }\n    for (let candidate of candidates) {\n      participants.push(candidate.value);\n    }\n    const stime = moment(`${date} ${startTime}`, \"YYYY-MM-DD HH:mm:ss\").format();\n    const etime = moment(`${date} ${endTime}`, \"YYYY-MM-DD HH:mm:ss\").format();\n    const interview = {\n      sTime: stime,\n      eTime: etime,\n      participants: participants\n    };\n    console.log(interview);\n    fetch(`${API_URL}/meetings`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(interview)\n    }).then(res => {\n      if (res.ok) {\n        return res.json();\n      }\n      return res.text().then(text => {\n        throw new Error(text);\n      });\n    }).then(data => {\n      console.log(data);\n      setIsPending(false);\n      console.log(\"Successfully added interview\");\n      alert(\"Successfully scheduled interview!\");\n      history.push(\"/\");\n    }).catch(err => {\n      const data = JSON.parse(err.message);\n      alert(data.message);\n      setIsPending(false);\n      console.log(err);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"schedule\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Schedule a new interview\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Select Candidates : \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        isMulti: true,\n        closeMenuOnSelect: false,\n        components: animatedComponents,\n        name: \"candidates\",\n        options: getOptions(candidateData),\n        className: \"basic-multi-select\",\n        classNamePrefix: \"select\",\n        onChange: selectedOption => {\n          setCandidates(selectedOption);\n          console.log(\"candidates selected\", selectedOption);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Choose Date : \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        required: true,\n        value: date,\n        onChange: e => setDate(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Start Time : \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"time\",\n        value: startTime,\n        required: true,\n        onChange: e => setStartTime(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"End Time : \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"time\",\n        value: endTime,\n        required: true,\n        onChange: e => setEndTime(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }, this), !isPending && /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Add Interview\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 26\n      }, this), isPending && /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: true,\n        children: \"Adding Interview...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n};\n_s(ScheduleInterview, \"2gBUG1MWsfFP1HcmTTFwzvavIyU=\", false, function () {\n  return [useHistory];\n});\n_c = ScheduleInterview;\nexport default ScheduleInterview;\nvar _c;\n$RefreshReg$(_c, \"ScheduleInterview\");","map":{"version":3,"names":["moment","useState","useEffect","Select","makeAnimated","useHistory","API_URL","ScheduleInterview","fetchParticipants","url","fetch","then","response","json","data","console","log","setCandidateData","animatedComponents","date","setDate","Date","startTime","setStartTime","endTime","setEndTime","candidates","setCandidates","candidateData","interviewers","setInterviewers","isPending","setIsPending","history","getOptions","options","d","push","label","email","value","handleSubmit","e","preventDefault","participants","interviewer","candidate","stime","format","etime","interview","sTime","eTime","method","headers","body","JSON","stringify","res","ok","text","Error","alert","catch","err","parse","message","selectedOption","target"],"sources":["C:/Users/211ad/Desktop/ReactJS/icp/frontend/src/ScheduleInterview.js"],"sourcesContent":["import moment from \"moment\";\nimport { useState ,useEffect} from \"react\";\nimport Select from \"react-select\";\nimport makeAnimated from \"react-select/animated\";\nimport { useHistory } from \"react-router-dom\";\nimport { API_URL } from \"./config/config.js\";\n\nconst ScheduleInterview = () => {\n\n\n  let fetchParticipants=()=>{\n    let url=`${API_URL}/participants`\n    fetch(url)\n    .then((response) => response.json())\n    .then((data) =>{ \n      console.log(data);\n      setCandidateData(data)\n    });\n  }\n\nuseEffect(()=>{\n\n  fetchParticipants();\n\n},[])\n\n  const animatedComponents = makeAnimated();\n  const [date, setDate] = useState(new Date());\n  const [startTime, setStartTime] = useState(new Date());\n  const [endTime, setEndTime] = useState(new Date());\n  const [candidates, setCandidates] = useState([]);\n  const [candidateData, setCandidateData] = useState([]);\n  const [interviewers, setInterviewers] = useState([]);\n  const [isPending, setIsPending] = useState(false);\n  const history = useHistory();\n\n  const getOptions = (data) => {\n    console.log(data);\n    const options = [];\n    for (let d of data) {\n      options.push({ label: d.email, value: d.email });\n    }\n    return options;\n  };\n\n  const handleSubmit = (e) => {\n    setIsPending(true);\n    e.preventDefault();\n    const participants = [];\n    for (let interviewer of interviewers) {\n      participants.push(interviewer.value);\n    }\n    for (let candidate of candidates) {\n      participants.push(candidate.value);\n    }\n    const stime = moment(\n      `${date} ${startTime}`,\n      \"YYYY-MM-DD HH:mm:ss\"\n    ).format();\n    const etime = moment(`${date} ${endTime}`, \"YYYY-MM-DD HH:mm:ss\").format();\n\n    const interview = {\n      sTime: stime,\n      eTime: etime,\n      participants: participants,\n    };\n    console.log(interview);\n\n    fetch(`${API_URL}/meetings`, {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(interview),\n    })\n      .then((res) => {\n        if (res.ok) {\n          return res.json();\n        }\n        return res.text().then((text) => {\n          throw new Error(text);\n        });\n      })\n      .then((data) => {\n        console.log(data);\n        setIsPending(false);\n        console.log(\"Successfully added interview\");\n        alert(\n          \"Successfully scheduled interview!\"\n        );\n        history.push(\"/\");\n      })\n      .catch((err) => {\n        const data = JSON.parse(err.message);\n        alert(data.message);\n        setIsPending(false);\n        console.log(err);\n      });\n  };\n\n  return (\n    <div className=\"schedule\">\n      <h1>Schedule a new interview</h1>\n      <br></br>\n      {\n      (\n        <form onSubmit={handleSubmit}>\n          <label>Select Candidates : </label>\n          <Select\n            isMulti\n            closeMenuOnSelect={false}\n            components={animatedComponents}\n            name=\"candidates\"\n            options={getOptions(candidateData)}\n            className=\"basic-multi-select\"\n            classNamePrefix=\"select\"\n            onChange={(selectedOption) => {\n              setCandidates(selectedOption);\n              console.log(\"candidates selected\", selectedOption);\n            }}\n          />\n          <label>Choose Date : </label>\n          <input\n            type=\"date\"\n            required\n            value={date}\n            onChange={(e) => setDate(e.target.value)}\n          />\n          <label>Start Time : </label>\n          <input\n            type=\"time\"\n            value={startTime}\n            required\n            onChange={(e) => setStartTime(e.target.value)}\n          />\n          <label>End Time : </label>\n          <input\n            type=\"time\"\n            value={endTime}\n            required\n            onChange={(e) => setEndTime(e.target.value)}\n          />\n        \n          {!isPending && <button>Add Interview</button>}\n          {isPending && <button disabled>Adding Interview...</button>}\n        </form>\n      )}\n    </div>\n  );\n};\n\nexport default ScheduleInterview;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}