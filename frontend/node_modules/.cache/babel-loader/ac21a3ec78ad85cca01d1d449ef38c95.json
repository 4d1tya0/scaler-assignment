{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nconst useFetch = url => {\n  _s();\n  const [data, setData] = useState(null);\n  const [isPending, setIsPending] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const abortController = new AbortController();\n    fetch(url, {\n      signal: abortController.signal\n    }).then(res => {\n      if (!res.ok) throw new Error(`Unable to fetch data. Status Code: ${res.status}`);\n      return res.json();\n    }).then(data => {\n      console.log(\"data\", data);\n      setData(data);\n      setIsPending(false);\n      setError(null);\n    }).catch(err => {\n      if (err.name === \"AbortFetch\") console.log(\"fetch aborted!\");else {\n        setError(err.message);\n        setIsPending(false);\n      }\n    });\n    return () => abortController.abort();\n  }, [url]);\n  return {\n    data,\n    error,\n    isPending\n  };\n};\n_s(useFetch, \"VxPkICXS4AfkXU1R8tuEJAA8e58=\");\nexport default useFetch;","map":{"version":3,"names":["useEffect","useState","useFetch","url","data","setData","isPending","setIsPending","error","setError","abortController","AbortController","fetch","signal","then","res","ok","Error","status","json","console","log","catch","err","name","message","abort"],"sources":["C:/Users/211ad/Desktop/ReactJS/icp/frontend/src/useFetch.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\n\nconst useFetch = (url) => {\n  const [data, setData] = useState(null);\n  const [isPending, setIsPending] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const abortController = new AbortController();\n    fetch(url, { signal: abortController.signal })\n      .then((res) => {\n        if (!res.ok)\n          throw new Error(`Unable to fetch data. Status Code: ${res.status}`);\n        return res.json();\n      })\n      .then((data) => {\n        console.log(\"data\",data);\n        setData(data);\n        setIsPending(false);\n        setError(null);\n      })\n      .catch((err) => {\n        if (err.name === \"AbortFetch\") console.log(\"fetch aborted!\");\n        else {\n          setError(err.message);\n          setIsPending(false);\n        }\n      });\n    return () => abortController.abort();\n  }, [url]);\n\n  return { data, error, isPending };\n};\n\nexport default useFetch;\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAE3C,MAAMC,QAAQ,GAAIC,GAAG,IAAK;EAAA;EACxB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGJ,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACK,SAAS,EAAEC,YAAY,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAExCD,SAAS,CAAC,MAAM;IACd,MAAMU,eAAe,GAAG,IAAIC,eAAe,EAAE;IAC7CC,KAAK,CAACT,GAAG,EAAE;MAAEU,MAAM,EAAEH,eAAe,CAACG;IAAO,CAAC,CAAC,CAC3CC,IAAI,CAAEC,GAAG,IAAK;MACb,IAAI,CAACA,GAAG,CAACC,EAAE,EACT,MAAM,IAAIC,KAAK,CAAE,sCAAqCF,GAAG,CAACG,MAAO,EAAC,CAAC;MACrE,OAAOH,GAAG,CAACI,IAAI,EAAE;IACnB,CAAC,CAAC,CACDL,IAAI,CAAEV,IAAI,IAAK;MACdgB,OAAO,CAACC,GAAG,CAAC,MAAM,EAACjB,IAAI,CAAC;MACxBC,OAAO,CAACD,IAAI,CAAC;MACbG,YAAY,CAAC,KAAK,CAAC;MACnBE,QAAQ,CAAC,IAAI,CAAC;IAChB,CAAC,CAAC,CACDa,KAAK,CAAEC,GAAG,IAAK;MACd,IAAIA,GAAG,CAACC,IAAI,KAAK,YAAY,EAAEJ,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC,CAAC,KACxD;QACHZ,QAAQ,CAACc,GAAG,CAACE,OAAO,CAAC;QACrBlB,YAAY,CAAC,KAAK,CAAC;MACrB;IACF,CAAC,CAAC;IACJ,OAAO,MAAMG,eAAe,CAACgB,KAAK,EAAE;EACtC,CAAC,EAAE,CAACvB,GAAG,CAAC,CAAC;EAET,OAAO;IAAEC,IAAI;IAAEI,KAAK;IAAEF;EAAU,CAAC;AACnC,CAAC;AAAC,GA9BIJ,QAAQ;AAgCd,eAAeA,QAAQ"},"metadata":{},"sourceType":"module"}